import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a,b as n,d as s,e as t,f as i,r as p,o as c}from"./app-CmrNfAE9.js";const d="/images/memo.png",u={};function h(m,e){const l=p("RouteLink");return c(),r("div",null,[e[14]||(e[14]=a(`<h1 id="request" tabindex="-1"><a class="header-anchor" href="#request"><span>Request</span></a></h1><p>The main thing in hmpl syntax is string interpolation. In most frameworks, such as Cample and others, string interpolation occurs using double curly braces, but since it is not convenient to do three curly braces together with a request object, a single brace was chosen. The format in which string interpolation works is as follows - <code>{\${request}}</code>.</p><blockquote><p>When working with request, all <code>script</code> tags are removed by the module.</p></blockquote><p>The main way to send a request to the server is through a request object. This object includes the properties described below in documentation.</p><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">     &quot;src&quot;:&quot;/api/test&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This object is parsed using <code>JSON.parse</code>, so for convenience you can use the <code>stringify</code> function by passing the object that needs to be inserted into the string:</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> request</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> stringify</span><span style="color:#24292EFF;">({</span></span>
<span class="line"><span style="color:#24292EFF;">  src</span><span style="color:#D32F2F;">:</span><span style="color:#22863A;"> &quot;/api/test&quot;</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> templateFn</span><span style="color:#D32F2F;"> =</span><span style="color:#6F42C1;"> compile</span><span style="color:#24292EFF;">(</span><span style="color:#22863A;">\`{</span><span style="color:#D32F2F;">\${</span><span style="color:#24292EFF;">request</span><span style="color:#D32F2F;">}</span><span style="color:#22863A;">}\`</span><span style="color:#24292EFF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This object is replaced with HTML that comes from the server using the <code>template</code> tag.</p><p>Until the request is sent, there will be a comment in place of the request object that looks like this:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#C2C3C5;">&lt;!--hmpl1--&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This comment is replaced with HTML that comes from the server.</p><h2 id="src" tabindex="-1"><a class="header-anchor" href="#src"><span>src</span></a></h2><p>This property specifies the url to which the request will be sent. Property <code>src</code> is required.</p><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">     &quot;src&quot;:&quot;http://localhost:5000/api/test&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It is worth considering that if there is no hostname (protocol etc.) in the url, the hostname (protocol etc.) of the address from which the request is sent will be substituted.</p><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">     &quot;src&quot;:&quot;/api/test&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method</span></a></h2><p>This property specifies the request method that is sent to the server. The default value is the <code>get</code> method.</p><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">     &quot;method&quot;:&quot;get&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The supported methods are <code>GET</code>, <code>POST</code>, <code>PUT</code>, <code>PATCH</code> or <code>DELETE</code>.</p><h2 id="after" tabindex="-1"><a class="header-anchor" href="#after"><span>after</span></a></h2><p>The <code>after</code> property specifies after which event the request will be sent to the server. The value of the property is the string of the following construction <code>\${event}:\${selectors}</code>, where event is the event after which the request will be sent. and selectors are the targets to which event handlers will be assigned</p><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">     &quot;after&quot;:&quot;click:.target&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Selectors are not looked for in the <code>document</code>, but in the template string.</p></blockquote><p>The HTML that comes from the server will change to a new one each time in the DOM if events are triggered.</p><h2 id="indicators" tabindex="-1"><a class="header-anchor" href="#indicators"><span>indicators</span></a></h2>`,26)),n("p",null,[e[1]||(e[1]=s("The indicators property is intended to determine what HTML should be shown for a particular request status. The HTML markup in indicators is not extended by the module (it is not hmpl). The value is an object or an array of objects of type ")),t(l,{to:"/types.html#hmplindicator"},{default:i(()=>e[0]||(e[0]=[s("HMPLIndicator")])),_:1}),e[2]||(e[2]=s("."))]),e[15]||(e[15]=a(`<div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">    &quot;indicators&quot;: [</span></span>
<span class="line"><span style="color:#24292EFF;">       {</span></span>
<span class="line"><span style="color:#24292EFF;">         &quot;trigger&quot;: &quot;pending&quot;,</span></span>
<span class="line"><span style="color:#24292EFF;">         &quot;content&quot;: &quot;&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292EFF;">&gt;Loading...&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292EFF;">&gt;&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">       },</span></span>
<span class="line"><span style="color:#24292EFF;">       {</span></span>
<span class="line"><span style="color:#24292EFF;">         &quot;trigger&quot;: &quot;rejected&quot;,</span></span>
<span class="line"><span style="color:#24292EFF;">         &quot;content&quot;: &quot;&lt;</span><span style="color:#22863A;">p</span><span style="color:#24292EFF;">&gt;Error&lt;/</span><span style="color:#22863A;">p</span><span style="color:#24292EFF;">&gt;&lt;</span><span style="color:#22863A;">button</span><span style="color:#24292EFF;">&gt;reload&lt;/</span><span style="color:#22863A;">button</span><span style="color:#24292EFF;">&gt;&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">       }</span></span>
<span class="line"><span style="color:#24292EFF;">    ]</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The value of the <code>content</code> property is a string containing HTML markup.</p><p>The <code>trigger</code> values ​​are <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status" target="_blank" rel="noopener noreferrer">http codes</a> without success (because they come from html), as well as values ​​based on the <code>rejected</code> and <code>pending</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noopener noreferrer">Promise</a> states, and a generic <code>error</code> value for all errors.</p><p>To avoid writing an indicator for each error, the <code>error</code> value is triggered by <code>rejected</code> errors and error codes (from 400 to 599).</p><p>The values ​​of the http codes that indicate errors (from 400 to 599), as well as the value <code>rejected</code>, overlap the value <code>error</code>.</p><h2 id="repeat" tabindex="-1"><a class="header-anchor" href="#repeat"><span>repeat</span></a></h2><p>The <code>repeat</code> property receives a boolean value. If <code>true</code>, the request will be sent every time the event is processed on the <code>selectors</code> from the <code>after</code> property, and if <code>false</code>, the request will be sent only once, and after that all event listeners will be removed.</p><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">     repeat:false</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>By default, the value is <code>true</code>.</p><h2 id="memo" tabindex="-1"><a class="header-anchor" href="#memo"><span>memo</span></a></h2><p>Enables request memoization. Allows you to optimize the application without re-rendering the DOM again. This process can be compared to <code>no-cache</code> for <a href="https://developer.mozilla.org/en-US/docs/Web/API/Request/cache#value" target="_blank" rel="noopener noreferrer"><code>RequestСache</code></a>.</p><div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">{</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">     memo:true</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>By default, the value is <code>false</code>.</p><p>The memoization process itself looks like this:</p><img src="`+d+'" alt="memoization"><p>Also, response memoization only works with <a href="#repeat">repeat</a> enabled.</p><p><a href="https://hmpl-lang.github.io/blog/blog/2024/10/03/memoization-in-hmpl.html" target="_blank" rel="noopener noreferrer">More about memo</a></p><h2 id="initid" tabindex="-1"><a class="header-anchor" href="#initid"><span>initId</span></a></h2>',18)),n("p",null,[e[4]||(e[4]=s("The ")),e[5]||(e[5]=n("code",null,"initId",-1)),e[6]||(e[6]=s(" property references the ")),e[7]||(e[7]=n("code",null,"id",-1)),e[8]||(e[8]=s(" of the ")),t(l,{to:"/types.html#hmplrequestinit"},{default:i(()=>e[3]||(e[3]=[s("HMPLRequestInit")])),_:1}),e[9]||(e[9]=s(" dictionary and determines what initialization the request will have. The value accepts both a ")),e[10]||(e[10]=n("code",null,"number",-1)),e[11]||(e[11]=s(" and a ")),e[12]||(e[12]=n("code",null,"string",-1)),e[13]||(e[13]=s("."))]),e[16]||(e[16]=a(`<div class="language-hmpl line-numbers-mode" data-highlighter="shiki" data-ext="hmpl" data-title="hmpl" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#24292EFF;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">    {</span></span>
<span class="line"><span style="color:#24292EFF;">      &quot;src&quot;:&quot;/api/test&quot;,</span></span>
<span class="line"><span style="color:#24292EFF;">      &quot;initId&quot;:&quot;1&quot;</span></span>
<span class="line"><span style="color:#24292EFF;">    }</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">  {</span></span>
<span class="line"><span style="color:#24292EFF;">    {</span></span>
<span class="line"><span style="color:#24292EFF;">      &quot;src&quot;:&quot;/api/test&quot;,</span></span>
<span class="line"><span style="color:#24292EFF;">      &quot;initId&quot;:2</span></span>
<span class="line"><span style="color:#24292EFF;">    }</span></span>
<span class="line"><span style="color:#24292EFF;">  }</span></span>
<span class="line"><span style="color:#24292EFF;">&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292EFF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="background-color:#ffffff;color:#24292eff;"><pre class="shiki min-light vp-code"><code><span class="line"><span style="color:#D32F2F;">const</span><span style="color:#1976D2;"> arr</span><span style="color:#D32F2F;"> =</span><span style="color:#24292EFF;"> [</span></span>
<span class="line"><span style="color:#24292EFF;">  { id</span><span style="color:#D32F2F;">:</span><span style="color:#22863A;"> &quot;1&quot;</span><span style="color:#212121;">,</span><span style="color:#24292EFF;"> value</span><span style="color:#D32F2F;">:</span><span style="color:#24292EFF;"> {</span><span style="color:#D32F2F;">...</span><span style="color:#24292EFF;">} }</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">  { id</span><span style="color:#D32F2F;">:</span><span style="color:#1976D2;"> 2</span><span style="color:#212121;">,</span><span style="color:#24292EFF;"> value</span><span style="color:#D32F2F;">:</span><span style="color:#24292EFF;"> {</span><span style="color:#D32F2F;">...</span><span style="color:#24292EFF;">} }</span><span style="color:#212121;">,</span></span>
<span class="line"><span style="color:#24292EFF;">];</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>One dictionary can be referenced by several requests at once. This can be compared to the implementation of keys in databases</p>`,3))])}const b=o(u,[["render",h],["__file","request.html.vue"]]),y=JSON.parse('{"path":"/request.html","title":"Request","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"src","slug":"src","link":"#src","children":[]},{"level":2,"title":"method","slug":"method","link":"#method","children":[]},{"level":2,"title":"after","slug":"after","link":"#after","children":[]},{"level":2,"title":"indicators","slug":"indicators","link":"#indicators","children":[]},{"level":2,"title":"repeat","slug":"repeat","link":"#repeat","children":[]},{"level":2,"title":"memo","slug":"memo","link":"#memo","children":[]},{"level":2,"title":"initId","slug":"initid","link":"#initid","children":[]}],"readingTime":{"minutes":2.44,"words":732},"filePathRelative":"request.md"}');export{b as comp,y as data};
